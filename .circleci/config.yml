#
#version: 2
#jobs:
#  cypress/build:
#    resource_class: xlarge
#    docker:
#    - image: cypress/base:16.18.1
#    steps:
#    - checkout
#    - restore_cache:
#        keys:
#        - cache-{{ .Branch }}-{{ checksum "package.json" }}
#    - run:
#        name: Npm CI
#        command: npm ci && npm rebuild node-sass && npx browserslist@latest --update-db
#    - run:
#        command: npx cypress verify
#    - save_cache:
#        key: cache-{{ .Branch }}-{{ checksum "package.json" }}
#        paths:
#        - ~/.npm
#        - ~/.cache
#    - run: npm install -g npm@latest && npm run lint
#    - persist_to_workspace:
#        root: ~/
#        paths:
#        - project
#        - .cache/Cypress
#    - run: ls -la
#  cypress/e2e-tests:
#    resource_class: xlarge
#    docker:
#    - image: cypress/browsers:node-16.18.1-chrome-110.0.5481.96-1-ff-109.0-edge-110.0.1587.41-1
#    parallelism: 10
#    steps:
#    - attach_workspace:
#        at: ~/
#    - run: ls -la
#    - run:
#        name: before tests
#        command: circleci tests glob "tests/e2e/**/*.js" | circleci tests split > circleci.tests && sed -i 's/No timing found for "//g' circleci.tests && sed -i 's/"//g' circleci.tests && grep "\S" circleci.tests > uno.txt && mv uno.txt circleci.tests && cat circleci.tests
#    - run:
#        name: run tests
#        command:  TZ=UTC npx vue-cli-service test:e2e --mode test --headless --browser chrome --reporter mocha-junit-reporter --reporter-options mochaFile=reports/mocha/test-results.xml --spec $(cat circleci.tests | tr "\n" ",")
#    - run:
#        name: preparate coverage
#        command: mkdir coverage && mv .nyc_output/out.json coverage/coverage-$CIRCLE_NODE_INDEX-$(date +"%s%N").json
#    - save_cache:
#        paths:
#          - coverage/
#        key: pm-{{ .Environment.CIRCLE_NODE_INDEX }}-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#    - run: ls -la coverage
#    - store_artifacts:
#        path: tests/e2e/screenshots
#  cypress/report:
#    docker:
#    - image: cypress/base:16.18.1
#    steps:
#      - attach_workspace:
#          at: ~/
#      - run:
#          name: tests unit
#          command: npm run test-unit
#      - run: mkdir coverage
#      - restore_cache:
#          keys:
#            - pm-0-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - restore_cache:
#          keys:
#            - pm-1-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - restore_cache:
#          keys:
#            - pm-2-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - restore_cache:
#          keys:
#            - pm-3-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - restore_cache:
#          keys:
#            - pm-4-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - restore_cache:
#          keys:
#            - pm-5-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - restore_cache:
#          keys:
#            - pm-6-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - restore_cache:
#          keys:
#            - pm-7-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - restore_cache:
#          keys:
#            - pm-8-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - restore_cache:
#          keys:
#            - pm-9-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-coverage.json
#      - run: ls -la coverage && cp jest-coverage/coverage-final.json coverage/from-jest.json
#      - run: npx nyc merge coverage && mkdir .nyc_output
#      - run: mv coverage.json .nyc_output/out.json
#      - run: npx nyc report --reporter html --reporter text --reporter json-summary --report-dir combined-coverage
#      - store_artifacts:
#          path: combined-coverage
#      - store_test_results:
#          path: test_summary_reports
#
#workflows:
#  build:
#    jobs:
#    - cypress/build
#    - cypress/e2e-tests:
#        requires:
#          - cypress/build
#    - cypress/report:
#        requires:
#          - cypress/e2e-tests
#
#  version: 2

version: 2.1
orbs:
  cypress: cypress-io/cypress@3.1.3

executors:
  with-chrome-and-firefox:
    docker:
      - image: "cypress/browsers:node16.16.0-chrome105-ff104-edge"
    resource_class: xlarge
    environment:
      CYPRESS_coverage: false

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Commands ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
commands:
  report-coverage:
    description: |
      Store coverage report as an artifact and send it to Codecov service.
    steps:
      - store_artifacts:
          path: tests/e2e/screenshots
      - run: npx nyc report --reporter=text || true
  persist_ws:
    steps:
      - persist_to_workspace:
          paths:
            # for linux builds
            - .cache/Cypress
            - project
          root: ~/
  attach_ws:
    steps:
      - attach_workspace:
          at: ~/

  # Setup
  #  1. Install Cypress
  #  2. Validate types
  #  3. Run server unit-tests
  setup_project_and_cypress:
    steps:
      - cypress/install:
          package-manager: npm
      - run:
          name: Build CI ℹ️
          command: npm run build-bundle
      - run:
          name: Print machine info ℹ️
          command: npx cypress info
      - run:
          name: Cypress cache list
          command: npx cypress cache list
      - run:
          name: Lint Files
          command: npm run lint
      - run:
          name: Run Unit Tests
          command: npm run test-unit
      - persist_ws
  cypress_tests:
    parameters:
      browser:
        type: string
        default: chrome
      specPattern:
        type: string
        default: ''
      ciBuildId:
        type: string
      group:
        type: string
    steps:
      - attach_ws
      - cypress/run-tests:
#          start-command: npm run serve
          cypress-command: TZ=UTC npx vue-cli-service test:e2e --mode test --headless --ci-build-id=<<parameters.ciBuildId>> --group="<<parameters.group>>" --record --key $CYPRESS_RECORD_KEY --parallel --spec=<<parameters.specPattern>> --browser=<<parameters.browser>>
      - report-coverage

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Jobs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
jobs:
  setup_project_and_cypress_linux:
    executor: with-chrome-and-firefox
    steps:
      - setup_project_and_cypress
  cypress_tests_linux:
    executor: with-chrome-and-firefox
    parallelism: 5
    parameters:
      browser:
        type: string
        default: chrome
      specPattern:
        type: string
        default: ''
      ciBuildId:
        type: string
      group:
        type: string
    steps:
      - cypress_tests:
          browser: <<parameters.browser>>
          specPattern: <<parameters.specPattern>>
          ciBuildId: <<parameters.ciBuildId>>
          group: <<parameters.group>>

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Workflows ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
linux-workflow: &linux-workflow
  jobs:
    - setup_project_and_cypress_linux:
        name: "Setup Linux"
    # Run E2E tests in Chrome
    - cypress_tests_linux:
        name: "UI Tests - Chrome"
        browser: chrome
        specPattern: "tests/e2e/**/*"
        ciBuildId: ${CIRCLE_SHA1:0:8}
        group: "UI - Chrome"
        requires:
          - Setup Linux
    # Run E2E tests in Firefox
#    - cypress_tests_linux:
#        name: "UI Tests - Firefox"
#        browser: firefox
#        specPattern: "cypress/tests/ui/*"
#        ciBuildId: ${CIRCLE_SHA1:0:8}
#        group: "UI - Firefox"
#        requires:
#          - Setup Linux
workflows:
  linux:
    <<: *linux-workflow
